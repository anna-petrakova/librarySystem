/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package petrakova.library.librarysystem.app;

import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.SwingUtilities;
import javax.swing.WindowConstants;
import org.hibernate.Session;
import org.springframework.context.ApplicationContext;
import petrakova.library.librarysystem.db.BeanFactory;
import petrakova.library.librarysystem.db.Borrow;
import petrakova.library.librarysystem.db.BorrowManager;
import petrakova.library.librarysystem.db.BorrowManagerImpl;
import petrakova.library.librarysystem.db.Client;
import petrakova.library.librarysystem.db.ClientManager;
import petrakova.library.librarysystem.db.ClientManagerImpl;
import petrakova.library.librarysystem.db.DatabaseConnection;
import petrakova.library.librarysystem.db.LibraryItem;

/**
 *
 * @author Anna Petráková
 */
public class ListBorrow extends javax.swing.JFrame {
    private Session session = DatabaseConnection.getSession();
    private ApplicationContext factory = BeanFactory.getFactory();
    private ListSelectionModel model;
    private List<Borrow> borrows = new ArrayList<>();
    private BorrowTableModel tableModel = new BorrowTableModel(borrows);
    private BorrowManager borrowManager = BorrowManagerImpl.getInstance();
    private ClientManager clientManager = ClientManagerImpl.getInstance();

    /**
     * Creates new form ListBorrow
     */
    public ListBorrow() {
        initComponents();
        
        borrowsTable.setModel(tableModel);
        borrowsTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        model = borrowsTable.getSelectionModel();

        deleteButton.setEnabled(false);
        deleteButton.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        borrowsTable = new javax.swing.JTable();
        deleteButton = new javax.swing.JButton();
        addButto = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        clientIDField = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("List borrows");

        borrowsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(borrowsTable);

        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        addButto.setText("Add");
        addButto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtoActionPerformed(evt);
            }
        });

        jLabel2.setText("Client ID:");

        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(123, 123, 123)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(addButto)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(deleteButton))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(clientIDField, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(searchButton))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(clientIDField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addComponent(searchButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteButton)
                    .addComponent(addButto))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addButtoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtoActionPerformed
        
        AddBorrow addBorrow = new AddBorrow();
        addBorrow.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        addBorrow.setClientId(Long.valueOf(clientIDField.getText()));

        addBorrow.pack();
        addBorrow.setVisible(true);
    }//GEN-LAST:event_addButtoActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        if (getSelectedBorrowId() == null) {
            return;
        }
        delete();
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        
        search();
    }//GEN-LAST:event_searchButtonActionPerformed
    
    public Long getSelectedBorrowId() {
        if (model.getMaxSelectionIndex() == -1) {
            return null;
        }
        return (Long) tableModel.getValueAt(model.getMaxSelectionIndex(), 0);
    }
         
     public void setDeleteButton() {
        SwingUtilities.invokeLater(new Runnable() {
            public void run() {
                deleteButton.setVisible(true);
                deleteButton.setEnabled(true);
            }
        });
    }
     
     public void delete() {
        
        Client client = clientManager.findClientById(Long.valueOf(clientIDField.getText()));
        Borrow borrow = borrowManager.findBorrowById(getSelectedBorrowId());
        LibraryItem item = borrow.getItem();

        borrowManager.deleteBorrow(client, item);
        
        searchButton.doClick();
     }
     
     public void search() {
            Client client = clientManager.findClientById(Long.valueOf(clientIDField.getText()));
                         
             List<Borrow> borrowsFound;
             try {
                borrowsFound = borrowManager.findBorrowsForClient(client);
             } catch (IllegalArgumentException ex) {
                 JOptionPane.showMessageDialog(null, ex.getMessage(),
                        "Error Message", JOptionPane.ERROR_MESSAGE);
                 borrowsFound = new ArrayList<>();
             }
             
            borrows = borrowsFound;
            tableModel.setBorrows(borrows);
            tableModel.fireTableDataChanged();
     }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButto;
    private javax.swing.JTable borrowsTable;
    private javax.swing.JTextField clientIDField;
    private javax.swing.JButton deleteButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton searchButton;
    // End of variables declaration//GEN-END:variables
}
