/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package petrakova.library.librarysystem.app;

import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.SwingWorker;
import org.hibernate.Session;
import org.springframework.context.ApplicationContext;
import petrakova.library.librarysystem.db.BeanFactory;
import petrakova.library.librarysystem.db.Book;
import petrakova.library.librarysystem.db.BorrowManager;
import petrakova.library.librarysystem.db.BorrowManagerImpl;
import petrakova.library.librarysystem.db.CD;
import petrakova.library.librarysystem.db.DatabaseConnection;
import petrakova.library.librarysystem.db.LibraryItem;
import petrakova.library.librarysystem.db.LibraryItemManager;
import petrakova.library.librarysystem.db.LibraryItemManagerImpl;
import petrakova.library.librarysystem.db.Magazine;

/**
 *
 * @author Anna Petráková
 */
public class ItemForm extends javax.swing.JPanel {
    private Session session = DatabaseConnection.getSession();
    private ApplicationContext factory = BeanFactory.getFactory();
    private LibraryItemManager itemManager = LibraryItemManagerImpl.getInstance();
    private BorrowManager borrowManager = BorrowManagerImpl.getInstance();
    private ListSelectionModel model;
    private List<LibraryItem> items = new ArrayList<>();
    private ItemTableModel tableModel = new ItemTableModel(items);
    private ListSwingWorker listSwingWorker = new ListSwingWorker();

    /**
     * Creates new form ItemForm
     */
    public ItemForm() {
        initComponents();
        
        itemsTable.setModel(tableModel);
        itemsTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        model = itemsTable.getSelectionModel();
        
        listSwingWorker.execute();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        nameBookField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        isbnField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        authorField = new javax.swing.JTextField();
        addBookButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        nameMagazineField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        issueNumberSpinner = new javax.swing.JSpinner();
        addMagazineButton = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        nameCdField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        bandNameField = new javax.swing.JTextField();
        addCDButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        itemsTable = new javax.swing.JTable();
        deleteButton = new javax.swing.JButton();

        jLabel1.setText("Name:");

        jLabel2.setText("ISBN:");

        jLabel3.setText("Author:");

        addBookButton.setText("Add book");
        addBookButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBookButtonActionPerformed(evt);
            }
        });

        jLabel4.setText("Name:");

        jLabel5.setText("Isue number:");

        addMagazineButton.setText("Add magazine");
        addMagazineButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addMagazineButtonActionPerformed(evt);
            }
        });

        jLabel6.setText("Name:");

        jLabel7.setText("Band name:");

        addCDButton.setText("Add CD");
        addCDButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCDButtonActionPerformed(evt);
            }
        });

        itemsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(itemsTable);

        deleteButton.setText("Delete item");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 503, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(nameBookField)
                                    .addComponent(nameMagazineField, javax.swing.GroupLayout.DEFAULT_SIZE, 92, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nameCdField)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(isbnField, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel7)
                                .addComponent(jLabel5)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(authorField, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(addBookButton))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(issueNumberSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(addMagazineButton)))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(bandNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(addCDButton))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(deleteButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(nameBookField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(isbnField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(authorField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addBookButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(nameMagazineField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5)
                        .addComponent(issueNumberSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(addMagazineButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(nameCdField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(bandNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(addCDButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(deleteButton)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addBookButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBookButtonActionPerformed
       if (nameBookField.getText().isEmpty() || authorField.getText().isEmpty() || isbnField.getText().isEmpty() ) {
            JOptionPane.showMessageDialog(addBookButton, "Fields for book (name, author, isbn) must be filled",
                        "Error Message", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        submitBook();
    }//GEN-LAST:event_addBookButtonActionPerformed

    private void addMagazineButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addMagazineButtonActionPerformed
       if (nameMagazineField.getText().isEmpty() ) {
            JOptionPane.showMessageDialog(addMagazineButton, "Field must be filled",
                        "Error Message", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        try {
            submitMagazine();
        } catch (IllegalArgumentException ex) {
            JOptionPane.showMessageDialog(addMagazineButton, ex.getMessage(),
                        "Error Message", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_addMagazineButtonActionPerformed

    private void addCDButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCDButtonActionPerformed
        if (nameCdField.getText().isEmpty() || bandNameField.getText().isEmpty() ) {
            JOptionPane.showMessageDialog(addCDButton, "Fields must be filled",
                        "Error Message", JOptionPane.ERROR_MESSAGE);
            return;
        }
        submitCD();
    }//GEN-LAST:event_addCDButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        if (getSelectedItemId() == null) {
            JOptionPane.showMessageDialog(null, "You must choose an item to be deleted",
                    "Error Message", JOptionPane.ERROR_MESSAGE);
            return;
        }
        delete();
    }//GEN-LAST:event_deleteButtonActionPerformed

    public void submitBook() {
        Book book = factory.getBean(Book.class);

        book.setName(nameBookField.getText());
        book.setAuthor(authorField.getText());
        book.setIsbn(isbnField.getText());

        try {
            itemManager.createLibraryItem(book);

            JOptionPane.showMessageDialog(addBookButton, "Successfully added book",
                    "Confirmation Message", JOptionPane.INFORMATION_MESSAGE);
            nameBookField.setText("");
            authorField.setText("");
            isbnField.setText("");

        } catch (IllegalArgumentException ex) {
            JOptionPane.showMessageDialog(addBookButton, ex.getMessage(),
                        "Error Message", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        changeTableData();
    }
    
    public void submitMagazine() {
        Magazine magazine = factory.getBean(Magazine.class);

        magazine.setName(nameMagazineField.getText());
        int issueNumber = Integer.parseInt(issueNumberSpinner.getValue().toString());
        if (issueNumber < 0) {
            throw new IllegalArgumentException("Issue number is less than 0");
        }
        magazine.setIssueNumber(issueNumber);

        try {
            itemManager.createLibraryItem(magazine);

            JOptionPane.showMessageDialog(addMagazineButton, "Successfully added magazine",
                    "Confirmation Message", JOptionPane.INFORMATION_MESSAGE);
            
            nameMagazineField.setText("");
            issueNumberSpinner.setValue(0);

        } catch (IllegalArgumentException ex) {
            JOptionPane.showMessageDialog(addMagazineButton, ex.getMessage(),
                        "Error Message", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        changeTableData();
    }
    
    public void submitCD() {
        CD cd = factory.getBean(CD.class);

        cd.setName(nameCdField.getText());
        cd.setBandName(bandNameField.getText());

        try {
            itemManager.createLibraryItem(cd);

            JOptionPane.showMessageDialog(addCDButton, "Successfully added CD",
                    "Confirmation Message", JOptionPane.INFORMATION_MESSAGE);
            
            nameCdField.setText("");
            bandNameField.setText("");

        } catch (IllegalArgumentException ex) {
            JOptionPane.showMessageDialog(addCDButton, ex.getMessage(),
                        "Error Message", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        changeTableData();
    }
    
    private Long getSelectedItemId() {
        if (model.getMaxSelectionIndex() == -1) {
            return null;
        }
        return (Long) tableModel.getValueAt(model.getMaxSelectionIndex(), 0);
    }
    
    private void changeTableData() {
        items = itemManager.findAllItems();
            
        tableModel.setItems(items);
        tableModel.fireTableDataChanged();
    }
    
    private void delete() {
        LibraryItem item = itemManager.findLibraryItemById(getSelectedItemId());

        if (borrowManager.findClientForItem(item) != null) {
            JOptionPane.showMessageDialog(null, "This item is borrowed",
                    "Error Message", JOptionPane.ERROR_MESSAGE);
            return;
        }

        itemManager.deleteLibraryItem(item);
        
        changeTableData();
    }
    
    private class ListSwingWorker extends SwingWorker<Void, Void> {

        @Override
        protected Void doInBackground() throws Exception {
            List<LibraryItem> itemsFound;
            itemsFound = itemManager.findAllItems();
            
            items = itemsFound;
            tableModel.setItems(items);
            tableModel.fireTableDataChanged();
            return null;
        }
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBookButton;
    private javax.swing.JButton addCDButton;
    private javax.swing.JButton addMagazineButton;
    private javax.swing.JTextField authorField;
    private javax.swing.JTextField bandNameField;
    private javax.swing.JButton deleteButton;
    private javax.swing.JTextField isbnField;
    private javax.swing.JSpinner issueNumberSpinner;
    private javax.swing.JTable itemsTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nameBookField;
    private javax.swing.JTextField nameCdField;
    private javax.swing.JTextField nameMagazineField;
    // End of variables declaration//GEN-END:variables
}
